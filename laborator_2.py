# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/120Uh0iJiG1AgxXs_QE-Wb1s-nc8Nofc4
"""

import numpy as np
import matplotlib.pyplot as plt

#laborator2

#exercitiul1

amplitudine = 1.0
frecventa = 2.0
faza = 0

t = np.linspace(0, 2, 1000)
semnal_sinus = amplitudine * np.sin(2 * np.pi * frecventa * t + faza)
semnal_cosinus = amplitudine * np.cos(2 * np.pi * frecventa * t + faza - np.pi/2)

fig, axs = plt.subplots(2)
fig.suptitle('Exercitiul 1')
axs[0].plot(t,semnal_sinus)
axs[1].plot(t,semnal_cosinus)

plt.show()

import numpy as np
import random
import matplotlib.pyplot as plt

#laborator2

#exercitiul2

amplitudine = 1.0
frecventa = 2.0
faza1 = 0
faza2 = 1
faza3 = 2
faza4 = 4

t = np.linspace(0, 2, 1000)
x1 = amplitudine * np.sin(2 * np.pi * frecventa * t + faza1)
x2 = amplitudine * np.sin(2 * np.pi * frecventa * t + faza2)
x3 = amplitudine * np.sin(2 * np.pi * frecventa * t + faza3)
x4 = amplitudine * np.sin(2 * np.pi * frecventa * t + faza4)


# fig, axs = plt.subplots(4)
# fig.suptitle('Exercitiul 2')
# axs[0].plot(t,semnal_sinus_1)
# axs[1].plot(t,semnal_sinus_2)
# axs[2].plot(t,semnal_sinus_3)
# axs[3].plot(t,semnal_sinus_4)

plt.plot(t,x1)
plt.plot(t,x2)
plt.plot(t,x3)
plt.plot(t,x4)

# plt.show()

z=np.random.normal(0, 1, 4)
snr1 = 0.1
snr2 = 1
snr3 = 10
snr4 = 100

gama1_x1=np.linalg.norm(x1,2)/snr1*np.linalg.norm(z,2)
gama2_x1=np.linalg.norm(x1,2)/snr2*np.linalg.norm(z,2)
gama3_x1=np.linalg.norm(x1,2)/snr3*np.linalg.norm(z,2)
gama4_x1=np.linalg.norm(x1,2)/snr4*np.linalg.norm(z,2)

semnal_x1_1

#linalg.norm


print(z)